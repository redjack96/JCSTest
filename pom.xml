<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Le informazioni su questo progetto. -->
    <groupId>org.giacomolorenzo.rossi</groupId>
    <artifactId>JCSTest</artifactId>
    <version>1.0.0</version>

    <properties>
        <java.version>14</java.version>
        <maven.compiler.source>14</maven.compiler.source>
        <maven.compiler.target>14</maven.compiler.target>
        <!-- Evita il warning durante la fase build -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- Le seguenti properties permettono il collegamento al progetto SonarCloud e alla coverage -->
        <sonar.projectKey>redjack96_JCSTest</sonar.projectKey>
        <sonar.organization>redjack96</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.language>java</sonar.language>
        <sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <sonar.tests>src/test/java</sonar.tests>
        <!-- Le versioni delle dipendenze-->
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-failsafe-plugins.version>3.0.0-M5</maven-failsafe-plugins.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <!-- Versione di jcs -->
        <jcs.version>1.3</jcs.version>
        <commons-logging.version>1.1</commons-logging.version>
        <concurrent.version>1.0</concurrent.version>
        <org.jacoco.agent.version>0.8.5</org.jacoco.agent.version>
        <coverageProfile.systemPath>${basedir}/jcs_fat_jar/jcs-1.3.jar</coverageProfile.systemPath>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <junit.version>4.13.2</junit.version>
        <awaitility.version>4.0.3</awaitility.version>
        <mockito.version>3.9.0</mockito.version>
        <lombok.version>1.18.18</lombok.version>
        <sonarscanner.version>3.9.0.2155</sonarscanner.version> <!-- Permette di eseguire SonarQube -->
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version> <!-- Permette di eseguire SonarQube -->
    </properties>

    <!-- Per attivare questo profilo, usare il seguente comando: -->
    <!-- mvn groupId:artifactId:goal -P coverageProfile   -->
    <profiles>
        <profile>
            <id>coverageProfile</id> <!-- Crea un nuovo profilo chiamato coverageProfile-->
            <activation>
                <!--<activeByDefault>false</activeByDefault>--> <!-- Non viene attivato di default. Va eseguito via CLI -->
                <file>
                    <missing>target/jacoco.exec</missing> <!-- Si attiva se il file jacoco.exec non esiste -->
                </file>
            </activation>
            <dependencies>
                <dependency> <!-- Colleghiamo a jacoco il progetto jcs, versione 1.3 -->
                    <groupId>org.apache.jcs</groupId>
                    <artifactId>jcs</artifactId>
                    <version>${jcs.version}</version>
                    <!-- Collego a Jacoco il fat jar giÃ  istrumentato (ha bisogno del path assoluto) -->
                </dependency>
                <dependency>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                    <version>${commons-logging.version}</version>
                </dependency>
                <dependency>
                    <groupId>concurrent</groupId>
                    <artifactId>concurrent</artifactId>
                    <version>${concurrent.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jacoco</groupId>
                    <artifactId>org.jacoco.agent</artifactId>
                    <classifier>runtime</classifier>
                    <version>${org.jacoco.agent.version}</version>
                </dependency>
            </dependencies>
            <!-- Plugin da utilizzare durante il Build del progetto. -->
            <build>
                <plugins>
                    <!--                    <plugin>-->
                    <!--                        <groupId>org.apache.maven.plugins</groupId>-->
                    <!--                        <artifactId>maven-resources-plugin</artifactId>-->
                    <!--                        <version>${maven-resources-plugin.version}</version>-->
                    <!--                        <executions>-->
                    <!--                            <execution>-->
                    <!--                                <id>copy-resources</id>-->
                    <!--                                <phase>pre-integration-test</phase>-->
                    <!--                                <goals>-->
                    <!--                                    <goal>copy-resources</goal>-->
                    <!--                                </goals>-->
                    <!--                                <configuration>-->
                    <!--                                    <outputDirectory>${basedir}/target/classes</outputDirectory>-->
                    <!--                                    <resources>-->
                    <!--                                        <resource>-->
                    <!--                                            <directory>${basedir}/jcs_source/</directory>-->
                    <!--                                            <filtering>false</filtering>-->
                    <!--                                        </resource>-->
                    <!--                                    </resources>-->
                    <!--                                </configuration>-->
                    <!--                            </execution>-->
                    <!--                        </executions>-->
                    <!--                    </plugin>-->
                    <!-- Il plugin di jacoco per Maven-->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <!-- NOTE THAT AUTOMATIC REPORTING IS USELESS, AS THE SOURCE FILES OF jcs ARE NEEDED: -->
                            <!-- GENERATE THE REPORTS OFFLINE AS DESCRIBED IN  jacocolibSnippets.txt -->
                            <execution>
                                <id>jacoco-on-the-fly</id>
                                <goals>
                                    <goal>prepare-agent</goal> <!-- Eseguito all' inizio (phase initialize)-->
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                                <!--<configuration>
                                    <inclNoLocationClasses>true</inclNoLocationClasses>
                                    <includes>${basedir}/jcs_jar/jcs-1.3.jar</includes>
                                </configuration>-->
                            </execution>
                            <execution>
                                <id>report-on-the-fly</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report</goal> <!-- Trovi il report csv/xml/html nella cartella /target/site/jacoco-->
                                </goals>
                                <configuration>
                                    <includes>${basedir}/jcs_jar/jcs-1.3.jar</includes>
                                    <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--        <profile>-->
        <!--            <id>testProfile</id>-->
        <!--            <activation>-->
        <!--                <activeByDefault>false</activeByDefault>-->
        <!--            </activation>-->
        <!--            &lt;!&ndash; Informazioni richieste per eseguire il build del progetto &ndash;&gt;-->
        <!--            <build>-->
        <!--                <plugins>-->
        <!--                    <plugin>-->
        <!--                        <groupId>org.apache.maven.plugins</groupId>-->
        <!--                        <artifactId>maven-jar-plugin</artifactId>-->
        <!--                        <version>${maven-jar-plugin.version}</version>-->
        <!--                        &lt;!&ndash; Permette di eliminare il warning del jar vuoto con "mvn verify" &ndash;&gt;-->
        <!--                        <configuration>-->
        <!--                            <classesDirectory>src</classesDirectory>-->
        <!--                            <excludes>-->
        <!--                                <exclude>**</exclude>-->
        <!--                            </excludes>-->
        <!--                        </configuration>-->
        <!--                    </plugin>-->
        <!--                    &lt;!&ndash; Esegue i test di integrazione durante la fase "integration-test" o "verify"&ndash;&gt;-->
        <!--                    <plugin>-->
        <!--                        <groupId>org.apache.maven.plugins</groupId>-->
        <!--                        <artifactId>maven-failsafe-plugin</artifactId>-->
        <!--                        <version>${maven-failsafe-plugins.version}</version>-->
        <!--                        <executions>-->
        <!--                            <execution>-->
        <!--                                <goals>-->
        <!--                                    <goal>integration-test</goal>-->
        <!--                                    <goal>verify</goal>-->
        <!--                                </goals>-->
        <!--                            </execution>-->
        <!--                        </executions>-->
        <!--                    </plugin>-->
        <!--                    &lt;!&ndash; Esegue i test di unita' durante la fase "test"&ndash;&gt;-->
        <!--                    <plugin>-->
        <!--                        <groupId>org.apache.maven.plugins</groupId>-->
        <!--                        <artifactId>maven-surefire-plugin</artifactId>-->
        <!--                        <version>${maven-surefire-plugin.version}</version>-->
        <!--                        &lt;!&ndash; Non voglio eseguire i test originali &ndash;&gt;-->
        <!--                        <configuration>-->
        <!--                            <excludes>-->
        <!--                                <exclude>ZeroSizeCacheUnitTest.java</exclude>-->
        <!--                                <exclude>engine/EventQueueConcurrentLoadTest.java</exclude>-->
        <!--                            </excludes>-->
        <!--                        </configuration>-->
        <!--                    </plugin>-->
        <!--                </plugins>-->
        <!--            </build>-->
        <!--        </profile>-->
    </profiles>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${org.jacoco.agent.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonarscanner.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${org.jacoco.agent.version}</version>
        </dependency>
        <!-- Il progetto JCS per cui dobbiamo re-implementare i test come test parametrici -->
        <dependency>
            <groupId>org.apache.jcs</groupId>
            <artifactId>jcs</artifactId>
            <version>${jcs.version}</version>
        </dependency>
        <!-- Dipendenza per il testing con Junit 4 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Utilizzato per sostituire Thread.sleep() nei test (ed evitare il Code Smell)-->
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- utilizzato per generare a run time getter, setter, costruttori ecc.-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


</project>