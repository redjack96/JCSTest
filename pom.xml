<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Le informazioni su questo progetto. -->
    <groupId>org.giacomolorenzo.rossi</groupId>
    <artifactId>JCSTest</artifactId>
    <version>1.0.0</version>

    <properties>
        <java.version>14</java.version>
        <maven.compiler.source>14</maven.compiler.source>
        <maven.compiler.target>14</maven.compiler.target>
        <!-- Evita il warning durante la fase build -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- Le seguenti properties permettono il collegamento al progetto SonarCloud e alla coverage -->
        <sonar.projectKey>redjack96_JCSTest</sonar.projectKey>
        <sonar.organization>redjack96</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/jacoco/report/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <!-- Le versioni delle dipendenze-->
        <maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
        <maven-failsafe-plugins.version>3.0.0-M5</maven-failsafe-plugins.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <!-- Versione di jcs -->
        <jcs.version>1.3</jcs.version>
        <commons-logging.version>1.1</commons-logging.version>
        <concurrent.version>1.0</concurrent.version>
        <org.jacoco.agent.version>0.8.5</org.jacoco.agent.version>
        <coverageProfile.systemPath>${basedir}/src/test/resources/jacoco.xml</coverageProfile.systemPath>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <junit.version>4.13.2</junit.version>
        <awaitility.version>4.0.3</awaitility.version>
        <mockito.version>3.9.0</mockito.version>
        <lombok.version>1.18.18</lombok.version>
        <sonarscanner.version>3.9.0.2155</sonarscanner.version> <!-- Permette di eseguire SonarQube -->
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version> <!-- Permette di eseguire SonarQube -->
        <jcs-source-location>${basedir}/jcs_source/src</jcs-source-location>
        <jcs-classes-location>${basedir}/jcs_jar/jcs-1.3/org/apache/jcs/</jcs-classes-location>
        <jcs-classes-baseLocation>${basedir}/jcs_jar/jcs-1.3/</jcs-classes-baseLocation>
    </properties>

    <!-- Per attivare tutte i passi di esecuzione di questo profilo, usare il seguente comando: -->
    <!-- mvn -P coverageProfile clean verify -->
    <!-- Per eseguire solo i test, senza attivare la coverage, esegui "mvn test" o "mvn failsafe:integration-test"-->
    <profiles>
        <profile>
            <id>coverageProfile</id>
            <activation>
                <file>
                    <missing>${basedir}/target/jacoco.exec</missing>  <!--Non viene attivato di default. Va eseguito via CLI con il comando sopra indicato-->
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <!-- Durante l'initialize della build avverto la VM che voglio l'istrumentazione on-the-fly per i test di unità-->
                            <execution>
                                <id>jacoco-on-the-fly</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jacoco-on-the-fly-integration</id>
                                <goals>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                                <configuration>
                                    <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                                </configuration>
                            </execution>
                            <!-- Poco prima di generare il report, faccio il merge tra i due file .exec per i test d' integrazione e d' unità.-->
                            <execution>
                                <id>jacoco-on-the-fly-merge</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>merge</goal>
                                </goals>
                                <configuration>
                                    <fileSets>
                                        <fileSet>
                                            <directory>${project.build.directory}</directory>
                                            <includes>
                                                <include>*.exec</include>
                                            </includes>
                                        </fileSet>
                                    </fileSets>
                                    <destFile>${project.build.directory}/jacoco.exec</destFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.0.0-M5</version>
                        <executions>
                            <execution>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <argLine>@{argLine}</argLine>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>3.0.0-M5</version>
                        <executions>
                            <execution>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <argLine>@{argLine}</argLine>
                        </configuration>
                    </plugin>
                    <!-- Creo il report con l' aiuto del plugin Ant -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <!-- Dipendenze jacoco per ANT-->
                        <dependencies>
                            <dependency>
                                <groupId>org.jacoco</groupId>
                                <artifactId>org.jacoco.ant</artifactId>
                                <version>0.8.1</version>
                            </dependency>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>20020829</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>jacoco-report</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <taskdef name="jacoco-report"
                                                 classname="org.jacoco.ant.ReportTask"
                                                 classpathref="maven.plugin.classpath"/>
                                        <taskdef
                                                classpathref="maven.runtime.classpath"
                                                resource="net/sf/antcontrib/antcontrib.properties"/>
                                        <echo message="${project.basedir}\target\jacoco.exec"/>
                                        <if>
                                            <available file="${project.basedir}\target\jacoco.exec"/>
                                            <then>
                                                <echo message="Executing jacoco report"/>
                                                <echo message="${jcs-source-location}"/>
                                                <trycatch>
                                                    <try>
                                                        <jacoco-report>
                                                            <executiondata>
                                                                <file file="${project.basedir}\target\jacoco.exec"/>
                                                            </executiondata>
                                                            <structure name="JCS">
                                                                <classfiles>
                                                                    <fileset dir="${jcs-classes-location}"/>
                                                                </classfiles>
                                                                <sourcefiles encoding="UTF-8">
                                                                    <fileset dir="${jcs-source-location}"/>
                                                                </sourcefiles>
                                                            </structure>
                                                            <!-- Crea un html, xml e csv -->
                                                            <html destdir="${project.basedir}\target\jacoco\report"/>
                                                            <xml destfile="${project.basedir}\target\jacoco\report\jacoco.xml"/>
                                                            <csv destfile="${project.basedir}\target\jacoco\report\jacoco.csv"/>
                                                            <xml destfile="${project.basedir}\src\test\resources\jacoco.xml" />
                                                        </jacoco-report>
                                                    </try>
                                                    <catch>
                                                        <echo>IMPOSSIBILE FARE IL REPORT</echo>
                                                    </catch>
                                                </trycatch>
                                            </then>
                                            <else>
                                                <echo message="No jacoco.exec file found."/>
                                            </else>
                                        </if>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${org.jacoco.agent.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonarscanner.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M5</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${org.jacoco.agent.version}</version>
        </dependency>
        <!-- Il progetto JCS per cui dobbiamo re-implementare i test come test parametrici -->
        <dependency>
            <groupId>org.apache.jcs</groupId>
            <artifactId>jcs</artifactId>
            <version>${jcs.version}</version>
        </dependency>
        <!-- Dipendenza per il testing con Junit 4 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Utilizzato per sostituire Thread.sleep() nei test (ed evitare il Code Smell)-->
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- utilizzato per generare a run time getter, setter, costruttori ecc.-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>


</project>